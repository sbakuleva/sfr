
R version 3.4.0 (2017-04-21) -- "You Stupid Darkness"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> suppressPackageStartupMessages(library(sf))
> p = st_point(c(1/3,1/6))
> st_sfc(p, precision = 1000)
Geometry set for 1 feature 
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0.3333333 ymin: 0.1666667 xmax: 0.3333333 ymax: 0.1666667
epsg (SRID):    NA
proj4string:    NA
precision:      1000 
POINT(0.333333333333333 0.166666666666667)
> st_as_sfc(st_as_binary(st_sfc(p, precision = 0L)))
Geometry set for 1 feature 
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0.3333333 ymin: 0.1666667 xmax: 0.3333333 ymax: 0.1666667
epsg (SRID):    NA
proj4string:    NA
POINT(0.333333333333333 0.166666666666667)
> st_as_sfc(st_as_binary(st_sfc(p, precision = 1000)))
Geometry set for 1 feature 
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0.333 ymin: 0.167 xmax: 0.333 ymax: 0.167
epsg (SRID):    NA
proj4string:    NA
POINT(0.333 0.167)
> st_as_sfc(st_as_binary(st_sfc(p, precision = 1000000)))
Geometry set for 1 feature 
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0.333333 ymin: 0.166667 xmax: 0.333333 ymax: 0.166667
epsg (SRID):    NA
proj4string:    NA
POINT(0.333333 0.166667)
> st_as_sfc(st_as_binary(st_sfc(p, precision = 10L)))
Geometry set for 1 feature 
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0.3 ymin: 0.2 xmax: 0.3 ymax: 0.2
epsg (SRID):    NA
proj4string:    NA
POINT(0.3 0.2)
> st_as_sfc(st_as_binary(st_sfc(p, precision = -1)))
Geometry set for 1 feature 
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0.3333333 ymin: 0.1666667 xmax: 0.3333333 ymax: 0.1666667
epsg (SRID):    NA
proj4string:    NA
POINT(0.333333343267441 0.16666667163372)
> 
> d = data.frame(a = 1:2)
> d$geom = c("POINT(0 0)", "POINT(1 1)")
> 
> st_as_sf(d, wkt = "geom")
Simple feature collection with 2 features and 1 field
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 1 ymax: 1
epsg (SRID):    NA
proj4string:    NA
  a       geom
1 1 POINT(0 0)
2 2 POINT(1 1)
> st_as_sf(d, wkt = 2)
Simple feature collection with 2 features and 1 field
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 1 ymax: 1
epsg (SRID):    NA
proj4string:    NA
  a       geom
1 1 POINT(0 0)
2 2 POINT(1 1)
> st_as_sf(d, wkt = "geom", remove = FALSE)
Simple feature collection with 2 features and 2 fields
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 1 ymax: 1
epsg (SRID):    NA
proj4string:    NA
  a       geom   geometry
1 1 POINT(0 0) POINT(0 0)
2 2 POINT(1 1) POINT(1 1)
> 
> st_as_sfc(c("POINT(0 0)", "POINT(1 1)"))
Geometry set for 2 features 
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 1 ymax: 1
epsg (SRID):    NA
proj4string:    NA
POINT(0 0)
POINT(1 1)
> st_as_sfc(c("POINT(0 0)", "POINT(1 1)", "POLYGON((0 0,1 1,0 1,0 0))"))
Geometry set for 3 features 
geometry type:  GEOMETRY
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 1 ymax: 1
epsg (SRID):    NA
proj4string:    NA
POINT(0 0)
POINT(1 1)
POLYGON((0 0, 1 1, 0 1, 0 0))
> st_as_sfc(character(0))
Geometry set for 0 features 
bbox:           xmin: NA ymin: NA xmax: NA ymax: NA
epsg (SRID):    NA
proj4string:    NA
> st_as_sfc(character(0), 4326)
Geometry set for 0 features 
bbox:           xmin: NA ymin: NA xmax: NA ymax: NA
epsg (SRID):    4326
proj4string:    +proj=longlat +datum=WGS84 +no_defs
> st_as_sfc(c("POINT(0 0)", "POINT(1 1)", "POLYGON((0 0,1 1,0 1,0 0))"), 
+ 	"+proj=longlat +datum=WGS84")
Geometry set for 3 features 
geometry type:  GEOMETRY
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 1 ymax: 1
epsg (SRID):    4326
proj4string:    +proj=longlat +datum=WGS84 +no_defs
POINT(0 0)
POINT(1 1)
POLYGON((0 0, 1 1, 0 1, 0 0))
> dg = st_as_sf(d, wkt = "geom")
> print(dg, n = 1)
Simple feature collection with 2 features and 1 field
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 1 ymax: 1
epsg (SRID):    NA
proj4string:    NA
First 1 features:
  a       geom
1 1 POINT(0 0)
> 
> st_geometry(d) = st_as_sfc(d$geom)
> d
Simple feature collection with 2 features and 2 fields
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 1 ymax: 1
epsg (SRID):    NA
proj4string:    NA
  a       geom   geometry
1 1 POINT(0 0) POINT(0 0)
2 2 POINT(1 1) POINT(1 1)
> 
> x = st_sfc(list(st_point(0:1), st_point(0:1)), crs = 4326)
> # don't warn when replacing crs with identical value:
> st_sfc(x, crs = 4326)
Geometry set for 2 features 
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 1 xmax: 0 ymax: 1
epsg (SRID):    4326
proj4string:    +proj=longlat +datum=WGS84 +no_defs
POINT(0 1)
POINT(0 1)
> st_sfc(x, crs = "+proj=longlat +datum=WGS84 +no_defs")
Geometry set for 2 features 
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 1 xmax: 0 ymax: 1
epsg (SRID):    4326
proj4string:    +proj=longlat +datum=WGS84 +no_defs
POINT(0 1)
POINT(0 1)
> # but do when it changes:
> st_sfc(x, crs = 3857)
Geometry set for 2 features 
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 1 xmax: 0 ymax: 1
epsg (SRID):    3857
proj4string:    +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs
POINT(0 1)
POINT(0 1)
Warning message:
st_crs<- : replacing crs does not reproject data; use st_transform for that 
> 
> p = st_point(0:1)
> st_cast(p, "MULTIPOINT")
MULTIPOINT(0 1)
> mp = st_multipoint(rbind(c(0,1), c(2,2)))
> st_cast(mp, "POINT")
POINT(0 1)
Warning message:
In st_cast.MULTIPOINT(mp, "POINT") : point from first coordinate only
> st_cast(mp, "MULTIPOINT")
MULTIPOINT(0 1, 2 2)
> 
> # geometry collection to its elements:
> st_cast(st_geometrycollection(list(mp)), "POINT")
POINT(0 1)
Warning message:
In st_cast.MULTIPOINT(x[[1]], to, ...) : point from first coordinate only
> st_cast(st_geometrycollection(list(mp)), "MULTIPOINT")
MULTIPOINT(0 1, 2 2)
> st_cast(st_geometrycollection(list(p,mp)), "MULTIPOINT")
MULTIPOINT(0 1)
Warning message:
In st_cast.GEOMETRYCOLLECTION(st_geometrycollection(list(p, mp)),  :
  only first part of geometrycollection is retained
> 
> mp = st_multipoint(rbind(c(0,1)))
> x = st_sfc(p, mp)
> st_cast(x, "POINT")
Geometry set for 2 features 
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 1 xmax: 0 ymax: 1
epsg (SRID):    NA
proj4string:    NA
POINT(0 1)
POINT(0 1)
Warning message:
In st_cast.MULTIPOINT(X[[i]], ...) : point from first coordinate only
> 
> sf = st_sf(a = 3:2, geom = x)
> st_cast(sf, "POINT")
Simple feature collection with 2 features and 1 field
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 1 xmax: 0 ymax: 1
epsg (SRID):    NA
proj4string:    NA
  a   geometry
1 3 POINT(0 1)
2 2 POINT(0 1)
Warning message:
In st_cast.MULTIPOINT(X[[i]], ...) : point from first coordinate only
> 
> suppressPackageStartupMessages( library(dplyr) )
> 
> x %>% st_cast("POINT")
Geometry set for 2 features 
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 1 xmax: 0 ymax: 1
epsg (SRID):    NA
proj4string:    NA
POINT(0 1)
POINT(0 1)
Warning message:
In st_cast.MULTIPOINT(X[[i]], ...) : point from first coordinate only
> 
> # points:
> mp = st_multipoint(rbind(c(0,1))) # single-point multipoint
> st_sfc(p,mp) %>% st_cast("POINT")
Geometry set for 2 features 
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 1 xmax: 0 ymax: 1
epsg (SRID):    NA
proj4string:    NA
POINT(0 1)
POINT(0 1)
Warning message:
In st_cast.MULTIPOINT(X[[i]], ...) : point from first coordinate only
> st_sfc(p,mp) %>% st_cast("MULTIPOINT")
Geometry set for 2 features 
geometry type:  MULTIPOINT
dimension:      XY
bbox:           xmin: 0 ymin: 1 xmax: 0 ymax: 1
epsg (SRID):    NA
proj4string:    NA
MULTIPOINT(0 1)
MULTIPOINT(0 1)
> 
> # lines:
> pts = rbind(c(0,0), c(1,1), c(2,1))
> st_sfc(st_linestring(pts), st_multilinestring(list(pts))) %>% st_cast("LINESTRING")
Geometry set for 2 features 
geometry type:  LINESTRING
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 2 ymax: 1
epsg (SRID):    NA
proj4string:    NA
LINESTRING(0 0, 1 1, 2 1)
LINESTRING(0 0, 1 1, 2 1)
> st_sfc(st_linestring(pts), st_multilinestring(list(pts))) %>% st_cast("MULTILINESTRING")
Geometry set for 2 features 
geometry type:  MULTILINESTRING
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 2 ymax: 1
epsg (SRID):    NA
proj4string:    NA
MULTILINESTRING((0 0, 1 1, 2 1))
MULTILINESTRING((0 0, 1 1, 2 1))
> 
> # polygons:
> pts = rbind(c(0,0), c(1,1), c(0,1), c(0,0))
> st_sfc(st_polygon(list(pts)), st_multipolygon(list(list(pts)))) %>% st_cast("POLYGON")
Geometry set for 2 features 
geometry type:  POLYGON
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 1 ymax: 1
epsg (SRID):    NA
proj4string:    NA
POLYGON((0 0, 1 1, 0 1, 0 0))
POLYGON((0 0, 1 1, 0 1, 0 0))
> st_sfc(st_polygon(list(pts)), st_multipolygon(list(list(pts)))) %>% st_cast("MULTIPOLYGON")
Geometry set for 2 features 
geometry type:  MULTIPOLYGON
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 1 ymax: 1
epsg (SRID):    NA
proj4string:    NA
MULTIPOLYGON(((0 0, 1 1, 0 1, 0 0)))
MULTIPOLYGON(((0 0, 1 1, 0 1, 0 0)))
> 
> 
> st_sfc(st_geometrycollection(list(p)), st_geometrycollection(list(mp))) %>% st_cast() 
Geometry set for 2 features 
geometry type:  GEOMETRY
dimension:      XY
bbox:           xmin: 0 ymin: 1 xmax: 0 ymax: 1
epsg (SRID):    NA
proj4string:    NA
POINT(0 1)
MULTIPOINT(0 1)
> st_sfc(st_geometrycollection(list(p)), st_geometrycollection(list(mp))) %>% 
+ 	st_cast() %>% 
+ 	st_cast("POINT")
Geometry set for 2 features 
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 1 xmax: 0 ymax: 1
epsg (SRID):    NA
proj4string:    NA
POINT(0 1)
POINT(0 1)
Warning message:
In st_cast.MULTIPOINT(X[[i]], ...) : point from first coordinate only
> 
> p = rbind(c(0,0),c(1,0),c(1,1),c(0,1),c(0,0))
> pol = st_polygon(list(p))
> # plot(pol)
> try(plot(st_polygonize(pol))) # --> breaks
Error : inherits(x, "sfc_LINESTRING") || inherits(x, "sfc_MULTILINESTRING") is not TRUE
> st_length(st_sfc(st_point(c(0,0))))
[1] 0
> 
> try(as(st_sfc(st_linestring(matrix(1:9,3))), "Spatial"))
Error in StopZ(zm) : Z not supported: use st_zm first to drop Z?
> 
> # check conus is present:
> x = st_sfc(st_point(c(-90,35)), st_point(c(-80,36)), 
+ 	crs = "+proj=longlat +datum=NAD27")
> st_transform(x, 3857)
Geometry set for 2 features 
geometry type:  POINT
dimension:      XY
bbox:           xmin: -10018760 ymin: 4163894 xmax: -8905533 ymax: 4300640
epsg (SRID):    3857
proj4string:    +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs
POINT(-10018764.3099097 4163893.70169306)
POINT(-8905532.70139521 4300640.2154045)
> 
> sf_extSoftVersion()[1:3]
   GEOS    GDAL  proj.4 
"3.5.1" "2.1.3" "4.9.2" 
> 
> # Ops.sfc:
> ls = st_sfc(st_linestring(rbind(c(0,0),c(0,1))))
> ls * 2
Geometry set for 1 feature 
geometry type:  LINESTRING
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 0 ymax: 2
epsg (SRID):    NA
proj4string:    NA
LINESTRING(0 0, 0 2)
> ls - 2
Geometry set for 1 feature 
geometry type:  LINESTRING
dimension:      XY
bbox:           xmin: -2 ymin: -2 xmax: -2 ymax: -1
epsg (SRID):    NA
proj4string:    NA
LINESTRING(-2 -2, -2 -1)
> 
> str(x)
sfc_POINT of length 2; first list element: Classes 'XY', 'POINT', 'sfg'  num [1:2] -90 35
> nc = st_read(system.file("shape/nc.shp", package="sf"), quiet = TRUE)
> str(nc)
Classes 'sf' and 'data.frame':	100 obs. of  15 variables:
 $ AREA     : num  0.114 0.061 0.143 0.07 0.153 0.097 0.062 0.091 0.118 0.124 ...
 $ PERIMETER: num  1.44 1.23 1.63 2.97 2.21 ...
 $ CNTY_    : num  1825 1827 1828 1831 1832 ...
 $ CNTY_ID  : num  1825 1827 1828 1831 1832 ...
 $ NAME     : Factor w/ 100 levels "Alamance","Alexander",..: 5 3 86 27 66 46 15 37 93 85 ...
 $ FIPS     : Factor w/ 100 levels "37001","37003",..: 5 3 86 27 66 46 15 37 93 85 ...
 $ FIPSNO   : num  37009 37005 37171 37053 37131 ...
 $ CRESS_ID : int  5 3 86 27 66 46 15 37 93 85 ...
 $ BIR74    : num  1091 487 3188 508 1421 ...
 $ SID74    : num  1 0 5 1 9 7 0 0 4 1 ...
 $ NWBIR74  : num  10 10 208 123 1066 ...
 $ BIR79    : num  1364 542 3616 830 1606 ...
 $ SID79    : num  0 3 6 2 3 5 2 2 2 5 ...
 $ NWBIR79  : num  19 12 260 145 1197 ...
 $ geometry :sfc_MULTIPOLYGON of length 100; first list element: List of 1
  ..$ :List of 1
  .. ..$ : num [1:27, 1:2] -81.5 -81.5 -81.6 -81.6 -81.7 ...
  ..- attr(*, "class")= chr  "XY" "MULTIPOLYGON" "sfg"
 - attr(*, "sf_column")= chr "geometry"
 - attr(*, "agr")= Factor w/ 3 levels "constant","aggregate",..: NA NA NA NA NA NA NA NA NA NA ...
  ..- attr(*, "names")= chr  "AREA" "PERIMETER" "CNTY_" "CNTY_ID" ...
> 
> st_agr("constant")
[1] constant
Levels: constant aggregate identity
> st_agr()
[1] <NA>
Levels: constant aggregate identity
> x <- st_sf(a = 1:2, b = 3:4, geom = x, agr = c("constant", "aggregate"))
> suppressPackageStartupMessages(library(dplyr))
> y <- x %>% st_set_agr("constant")
> y
Simple feature collection with 2 features and 2 fields
Attribute-geometry relationship: 2 constant, 0 aggregate, 0 identity
geometry type:  POINT
dimension:      XY
bbox:           xmin: -90 ymin: 35 xmax: -80 ymax: 36
epsg (SRID):    4267
proj4string:    +proj=longlat +ellps=clrk66 +nadgrids=@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat +no_defs
  a b          geom
1 1 3 POINT(-90 35)
2 2 4 POINT(-80 36)
> 
> sf1 <- st_sf(a = c("x", "y"), geom = st_sfc(st_point(3:4), st_point(3:4)))
> sf1[names(sf1)]
Simple feature collection with 2 features and 1 field
geometry type:  POINT
dimension:      XY
bbox:           xmin: 3 ymin: 4 xmax: 3 ymax: 4
epsg (SRID):    NA
proj4string:    NA
  a       geom
1 x POINT(3 4)
2 y POINT(3 4)
> 
> st_bbox(sf1)
xmin ymin xmax ymax 
   3    4    3    4 
> bb = st_bbox(nc)
> bb
     xmin      ymin      xmax      ymax 
-84.32385  33.88199 -75.45698  36.58965 
> st_crs(bb)
$epsg
[1] 4267

$proj4string
[1] "+proj=longlat +datum=NAD27 +no_defs"

attr(,"class")
[1] "crs"
> 
> # merge:
> a = data.frame(a = 1:3, b = 5:7)
> st_geometry(a) = st_sfc(st_point(c(0,0)), st_point(c(1,1)), st_point(c(2,2)))
> b = data.frame(x = c("a", "b", "c"), b = c(2,5,6))
> merge(a, b)
Simple feature collection with 2 features and 3 fields
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 1 ymax: 1
epsg (SRID):    NA
proj4string:    NA
  b a x   geometry
1 5 1 b POINT(0 0)
2 6 2 c POINT(1 1)
> merge(a, b, all = TRUE)
Simple feature collection with 4 features and 3 fields (of which 1 is empty)
geometry type:  GEOMETRY
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 2 ymax: 2
epsg (SRID):    NA
proj4string:    NA
  b  a    x             geometry
1 2 NA    a GEOMETRYCOLLECTION()
2 5  1    b           POINT(0 0)
3 6  2    c           POINT(1 1)
4 7  3 <NA>           POINT(2 2)
> 
> # joins:
> inner_join(a, b)
Joining, by = "b"
Simple feature collection with 2 features and 3 fields
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 1 ymax: 1
epsg (SRID):    NA
proj4string:    NA
  a b x   geometry
1 1 5 b POINT(0 0)
2 2 6 c POINT(1 1)
> left_join(a, b)
Joining, by = "b"
Simple feature collection with 3 features and 3 fields
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 2 ymax: 2
epsg (SRID):    NA
proj4string:    NA
  a b    x   geometry
1 1 5    b POINT(0 0)
2 2 6    c POINT(1 1)
3 3 7 <NA> POINT(2 2)
> right_join(a, b)
Joining, by = "b"
Simple feature collection with 3 features and 3 fields (of which 1 is empty)
geometry type:  GEOMETRY
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 1 ymax: 1
epsg (SRID):    NA
proj4string:    NA
   a b x             geometry
1 NA 2 a GEOMETRYCOLLECTION()
2  1 5 b           POINT(0 0)
3  2 6 c           POINT(1 1)
> full_join(a, b)
Joining, by = "b"
Simple feature collection with 4 features and 3 fields (of which 1 is empty)
geometry type:  GEOMETRY
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 2 ymax: 2
epsg (SRID):    NA
proj4string:    NA
   a b    x             geometry
1  1 5    b           POINT(0 0)
2  2 6    c           POINT(1 1)
3  3 7 <NA>           POINT(2 2)
4 NA 2    a GEOMETRYCOLLECTION()
> semi_join(a, b)
Joining, by = "b"
Simple feature collection with 2 features and 2 fields
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 1 ymax: 1
epsg (SRID):    NA
proj4string:    NA
  a b   geometry
1 1 5 POINT(0 0)
2 2 6 POINT(1 1)
> anti_join(a, b)
Joining, by = "b"
Simple feature collection with 1 feature and 2 fields
geometry type:  POINT
dimension:      XY
bbox:           xmin: 2 ymin: 2 xmax: 2 ymax: 2
epsg (SRID):    NA
proj4string:    NA
  a b   geometry
1 3 7 POINT(2 2)
> 
> # st_joins:
> a = st_sf(a = 1:3,
+  geom = st_sfc(st_point(c(1,1)), st_point(c(2,2)), st_point(c(3,3))))
> b = st_sf(a = 11:14,
+  geom = st_sfc(st_point(c(10,10)), st_point(c(2,2)), st_point(c(2,2)), st_point(c(3,3))))
> st_join(a, b)
Simple feature collection with 4 features and 2 fields
geometry type:  POINT
dimension:      XY
bbox:           xmin: 1 ymin: 1 xmax: 3 ymax: 3
epsg (SRID):    NA
proj4string:    NA
    a.x a.y       geom
1     1  NA POINT(1 1)
2     2  12 POINT(2 2)
2.1   2  13 POINT(2 2)
3     3  14 POINT(3 3)
> st_join(a, b, left = FALSE)
Simple feature collection with 3 features and 2 fields
geometry type:  POINT
dimension:      XY
bbox:           xmin: 2 ymin: 2 xmax: 3 ymax: 3
epsg (SRID):    NA
proj4string:    NA
    a.x a.y       geom
2     2  12 POINT(2 2)
2.1   2  13 POINT(2 2)
3     3  14 POINT(3 3)
> st_join(a, b, FUN = mean)
Simple feature collection with 3 features and 3 fields
geometry type:  POINT
dimension:      XY
bbox:           xmin: 1 ymin: 1 xmax: 3 ymax: 3
epsg (SRID):    NA
proj4string:    NA
  a.x Group.1  a.y       geom
1   1      NA   NA POINT(1 1)
2   2       2 12.5 POINT(2 2)
3   3       3 14.0 POINT(3 3)
> st_join(a, b, FUN = mean, left = FALSE)
Simple feature collection with 2 features and 3 fields
geometry type:  POINT
dimension:      XY
bbox:           xmin: 2 ymin: 2 xmax: 3 ymax: 3
epsg (SRID):    NA
proj4string:    NA
  a.x Group.1  a.y       geom
2   2       2 12.5 POINT(2 2)
3   3       3 14.0 POINT(3 3)
> 
> # rbind:
> x = st_sf(a = 1:2, geom = st_sfc(list(st_point(0:1), st_point(0:1)), crs = 4326))
> rbind(x, x, x)
Simple feature collection with 6 features and 1 field
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 1 xmax: 0 ymax: 1
epsg (SRID):    4326
proj4string:    +proj=longlat +datum=WGS84 +no_defs
  a       geom
1 1 POINT(0 1)
2 2 POINT(0 1)
3 1 POINT(0 1)
4 2 POINT(0 1)
5 1 POINT(0 1)
6 2 POINT(0 1)
> nc2 = rbind(nc[1:50, ], nc[51:100, ])
> all.equal(nc, nc2)
[1] TRUE
> 
> # st_sample:
> set.seed(131)
> options(digits=6)
> x = st_sfc(st_polygon(list(rbind(c(0,0),c(90,0),c(90,90),c(0,90),c(0,0)))), crs = st_crs(4326))
> (p <- st_sample(x, 10))
although coordinates are longitude/latitude, it is assumed that they are planar
Geometry set for 10 features 
geometry type:  POINT
dimension:      XY
bbox:           xmin: 11.24479 ymin: 2.201237 xmax: 82.34507 ymax: 59.90034
epsg (SRID):    4326
proj4string:    +proj=longlat +datum=WGS84 +no_defs
First 5 geometries:
POINT(18.579327701591 24.5979510914074)
POINT(11.2447945447639 20.1599067791835)
POINT(26.3945853430778 59.9003352040191)
POINT(33.8201717427 18.4236330568178)
POINT(76.171215204522 31.5416755356696)
> x = st_sfc(st_polygon(list(rbind(c(0,0),c(90,0),c(90,90),c(0,90),c(0,0))))) # NOT long/lat:
> st_sample(x, 10)
Geometry set for 10 features 
geometry type:  POINT
dimension:      XY
bbox:           xmin: 13.51135 ymin: 6.005704 xmax: 82.78265 ymax: 63.18553
epsg (SRID):    NA
proj4string:    NA
First 5 geometries:
POINT(19.2714130226523 21.4671036042273)
POINT(57.340495493263 37.6075198757462)
POINT(56.2872428074479 6.00570423994213)
POINT(36.0554852569476 10.193104497157)
POINT(52.4428965803236 33.3666403102688)
> x = st_sfc(st_polygon(list(rbind(c(-180,-90),c(180,-90),c(180,90),c(-180,90),c(-180,-90)))),
+  crs=st_crs(4326))
> p <- st_sample(x, 10)
although coordinates are longitude/latitude, it is assumed that they are planar
> pt = st_multipoint(matrix(1:20,,2))
> st_sample(p, 3)
Geometry set for 1 feature 
geometry type:  MULTIPOINT
dimension:      XY
bbox:           xmin: -15.77728 ymin: -22.46808 xmax: 143.823 ymax: 27.16136
epsg (SRID):    NA
proj4string:    NA
MULTIPOINT(48.8473404105753 9.37328114613777, 1...
> ls = st_sfc(st_linestring(rbind(c(0,0),c(0,1))),
+  st_linestring(rbind(c(0,0),c(.1,0))),
+  st_linestring(rbind(c(0,1),c(.1,1))),
+  st_linestring(rbind(c(2,2),c(2,2.00001))))
> st_sample(ls, 80)
Geometry set for 4 features  (of which 1 is empty)
geometry type:  MULTIPOINT
dimension:      XY
bbox:           xmin: 0 ymin: 0 xmax: 0.09147282 ymax: 1
epsg (SRID):    NA
proj4string:    NA
MULTIPOINT(0 0.302590963631447, 0 0.25143881739...
MULTIPOINT(0.0914728223831462 0, 0.073852008753...
MULTIPOINT(0.0488222356901458 1, 0.071650771392...
MULTIPOINT()
> st_sample(nc[1:2,], size = c(10,20))
although coordinates are longitude/latitude, it is assumed that they are planar
although coordinates are longitude/latitude, it is assumed that they are planar
Geometry set for 24 features 
geometry type:  POINT
dimension:      XY
bbox:           xmin: -81.66639 ymin: 36.29542 xmax: -80.96982 ymax: 36.56871
epsg (SRID):    4267
proj4string:    +proj=longlat +datum=NAD27 +no_defs
First 5 geometries:
POINT(-81.6663939738046 36.5562903100378)
POINT(-81.4734699225191 36.4148674289981)
POINT(-81.4985141439355 36.2954179169056)
POINT(-81.5255186840243 36.3320840914148)
POINT(-81.6410816551367 36.3952045484235)
> 
> #class(st_bind_cols(nc, as.data.frame(nc)[1:3]))
> class(dplyr::bind_cols(nc, as.data.frame(nc)[1:3]))
[1] "sf"         "data.frame"
> class(rbind(nc, nc))
[1] "sf"         "data.frame"
> class(cbind(nc, nc))
[1] "sf"         "data.frame"
> 
> proc.time()
   user  system elapsed 
  1.536   0.284   1.515 
